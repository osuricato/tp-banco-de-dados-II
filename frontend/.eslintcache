[{"/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Home/index.tsx":"1","/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Profile/styles.ts":"2","/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Profile/index.tsx":"3","/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Login/index.tsx":"4"},{"size":7235,"mtime":1617215781638,"results":"5","hashOfConfig":"6"},{"size":1701,"mtime":1617215683893,"results":"7","hashOfConfig":"6"},{"size":6085,"mtime":1617219032640,"results":"8","hashOfConfig":"6"},{"size":2949,"mtime":1617216447990,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yqq1k0",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Home/index.tsx",[],"/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Profile/styles.ts",[],"/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Profile/index.tsx",["19"],"<<<<<<< HEAD\nimport React, { useRef, useCallback, useState } from 'react';\n=======\nimport React, { useCallback, useRef } from 'react';\n>>>>>>> d0610428f4e0fdc95f590a99d39fc119c38876dd\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft, FiUser, FiMail, FiLock } from 'react-icons/fi';\nimport * as Yup from 'yup';\n\nimport * as Yup from 'yup';\n\nimport InputForm from '../../components/InputForm';\nimport Button from '../../components/Button';\n\n<<<<<<< HEAD\nimport { \n    Container,\n    Header,\n    BackButton,\n    Content,\n    FormContainer,\n    ButtonContainer\n} from './styles';\n\nimport api from '../../services/api';\n\ninterface UserFormData {\n    name: string,\n    email: string,\n    password: string,\n    newPassword: string\n=======\nimport { Container, Header, BackButton, Content, User, FormContainer, ButtonContainer } from './styles';\n\nimport Photo from '../../assets/photo.png';\nimport Camera from '../../assets/icons/camera.svg';\nimport api from '../../services/api';\nimport { useAuth } from '../../hooks/auth';\n\ninterface ProfileFormData {\n    name: string;\n    email: string;\n    password: string;\n>>>>>>> d0610428f4e0fdc95f590a99d39fc119c38876dd\n}\n\nconst Profile: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n\n<<<<<<< HEAD\n    const [dataUser, setDataUser] = useState(() => {\n        const user = localStorage.getItem('@RENTX:loggedUser');\n    \n        if (user) {\n            return { user: JSON.parse(user) };\n        }\n    \n        return {};\n    });;\n\n    console.log(dataUser.user.name)\n\n\n    const handleSubmit = useCallback(\n        async (data: UserFormData) => {\n          try {\n            formRef.current?.setErrors({});\n    \n            const schema = Yup.object().shape({\n                name: Yup.string().required('Nome obrigatório'),\n                email: Yup.string().required('Email obrigatório'),\n                password: Yup.string().required('Senha obrigatória.'),\n                newPassword: Yup.string().required('Nova senha obrigatória.'),\n            });\n      \n            await schema.validate(data, {\n                abortEarly: false,\n            });\n\n            if (data.name === dataUser.user.name &&\n                data.email === dataUser.user.email &&\n                data.password === dataUser.user.password) {\n                // await api.pu\n            }\n    \n            // await api.put\n            \n          } catch (error) {\n            console.log(error)\n          }\n        },\n=======\n    const { user } = useAuth();\n\n    const handleSubmit = useCallback(\n        async (data: ProfileFormData) => {\n            try {\n                formRef.current?.setErrors({});\n\n                const schema = Yup.object().shape({\n                    name: Yup.string().required('Nome obrigatório.'),\n                    email: Yup.string().required('Email obrigatório.'),\n                    password: Yup.string().required('Senha obrigatória.'),\n                });\n\n                await schema.validate(data, {\n                    abortEarly: false,\n                });\n\n                const { name, email, password } = data;\n\n                const formData = {\n                    name,\n                    email,\n                    password\n                };\n\n                const response = await api.put('register', formData);\n\n            } catch (err) {\n                console.log('Erro detectado');\n            }\n        }, \n        \n>>>>>>> d0610428f4e0fdc95f590a99d39fc119c38876dd\n        [],\n    );\n\n    return (\n        <Container>\n            <Header>\n                <BackButton>\n                    <Link to=\"/home\">\n                <span>\n                    <FiArrowLeft\n                    size={40}\n                    color={'#FFFFFF'}\n                    />\n                </span>\n                </Link>\n                </BackButton>\n                <h1>Editar Perfil</h1>     \n\n            </Header>\n\n            <Content>\n<<<<<<< HEAD\n=======\n                <User>\n                    <img className=\"user\" src={Photo} alt=\"User\"/>\n                    <button>\n                        <img className=\"camera\" src={Camera} alt=\"Camera\"/>\n                    </button>\n                </User>\n\n>>>>>>> d0610428f4e0fdc95f590a99d39fc119c38876dd\n                <Form ref={formRef} onSubmit={handleSubmit}>\n                    <FormContainer>\n                        <InputForm\n                            name=\"name\"\n                            icon={FiUser}\n                            required={true}\n                            labelName=\"Nome\"\n                            placeholder=\"Nome\"\n                        />\n\n                        <InputForm\n                            name=\"email\"\n                            type=\"email\"\n                            icon={FiMail}\n                            required={true}\n                            labelName=\"Email\"\n                            placeholder=\"Email\"\n                        />\n                    \n                        <InputForm\n                            name=\"password\"\n                            type=\"password\"\n                            icon={FiLock}\n                            required={true}\n                            labelName=\"Senha atual\"\n                            placeholder=\"Senha atual\"\n                        />\n\n                        <InputForm\n                            name=\"newPassowrd\"\n                            type=\"password\"\n                            icon={FiLock}\n                            required={true}\n                            labelName=\"Nova senha\"\n                            placeholder=\"Nova senha\"\n                        />\n                        <ButtonContainer>\n                            <Button type=\"submit\">Salvar alterações</Button>\n                        </ButtonContainer>\n                                    \n                    </FormContainer>\n                </Form>\n            </Content>\n        </Container>\n    )\n}\n\nexport default Profile;","/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Login/index.tsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"20","line":1,"column":0},"Parsing error: Merge conflict marker encountered."]