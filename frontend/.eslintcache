[{"/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Home/styles.ts":"1","/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Home/index.tsx":"2","/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Details/index.tsx":"3","/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/components/Datepicker/index.tsx":"4"},{"size":4063,"mtime":1617733652196,"results":"5","hashOfConfig":"6"},{"size":8176,"mtime":1617739916991,"results":"7","hashOfConfig":"6"},{"size":6826,"mtime":1617737951400,"results":"8","hashOfConfig":"6"},{"size":3627,"mtime":1617142322174,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yqq1k0",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Home/styles.ts",[],"/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Home/index.tsx",[],"/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/pages/Details/index.tsx",["19"],"import React, { useState, useEffect } from 'react';\nimport { FiArrowLeft, FiArrowRight } from 'react-icons/fi';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { format, parseISO } from 'date-fns';\n\nimport api from '../../services/api'\n\nimport Button from '../../components/Button';\n\nimport Lambo from '../../assets/Lambo.png';\nimport Cambio from '../../assets/icons/Cambio.svg';\nimport Forcy from '../../assets/icons/Forca.svg';\nimport Gasoliny from '../../assets/icons/Gasolina.svg';\nimport People from '../../assets/icons/Pessoas.svg';\nimport Speed from '../../assets/icons/Speed.svg';\nimport Vector from '../../assets/icons/Vector.svg';\n\nimport {\n    Container,\n    Header,\n    BackButton,\n    Content,\n    Car,\n    Info,\n    Settings,\n    Time,\n    Total\n} from './styles';\n\ninterface Params {\n    id: string;\n}\n\ninterface Listing {\n    _id: string,\n    price: number;\n    vehicle: {\n        model: string,\n        manufacturer: string,\n        acceleration: number,\n        fuel: string,\n        horsepower: string,\n        seats: number,\n        top_speed: number,\n        transmission: string,\n    };\n    startDate: Date;\n    endDate: Date;\n}\n\nconst Details: React.FC = () => {\n    const params = useParams<Params>();\n    const history = useHistory();\n\n    const [listing, setListings] = useState<Listing>()\n\n    const [data, setData] = useState(() => {\n        const user = localStorage.getItem('@RENTX:loggedUser');\n    \n        if (user) {\n            return { user: JSON.parse(user) };\n        }\n    \n        return {};\n    });\n\n    useEffect(() => {\n        api.get(`getListing/${params.id}`).then(response => {\n\n            const formattedListing =  {\n                ...response.data,\n                startDate: format(\n                    parseISO(response.data.startDate),\n                    'MM/dd/yyyy',\n                ),\n              \n                endDate: format(\n                    parseISO(response.data.endDate),\n                    'MM/dd/yyyy',\n                ),\n            };\n\n            setListings(formattedListing);\n        });\n    }, [params.id]);\n\n    async function handleToCreateSchedule(user: string, listing: string) {\n        try {\n            await api.post('createSchedule', {\n                user: user,\n                listing: listing\n            })\n\n            alert('Carro alugado com sucesso!\\nVerifique a página de agendamentos.')\n\n            history.push('/home')\n        } catch (error) {\n            console.log(error)\n\n            alert('Falha ao agendar! Tente novamente.')\n        }\n    }\n\n    return (\n        <Container>\n            <Header>\n                <BackButton>\n                    <Link to=\"/home\">\n                        <span>\n                            <FiArrowLeft \n                                size={24} \n                                color=\"#FFFFFF\"\n                            />\n                        </span>\n                    </Link>\n                </BackButton>\n            </Header>\n\n            {listing !== undefined ? \n                <Content>\n                    <Car>\n                        <img src={Lambo} alt=\"Lambo\"/>\n                    </Car>\n\n                    <Info>\n                        <div className=\"name\">\n                            <small>{listing?.vehicle.manufacturer}</small>\n                            <span>{listing?.vehicle.model}</span>\n                        </div>\n\n                        <div className=\"price\">\n                            <small>AO DIA</small>\n                            <span>R$ {listing?.price}</span>\n                        </div>\n                    </Info>\n\n                    <Settings>\n                        <div>\n                            <img src={Speed} alt=\"Speed\"/>\n                            <small>{listing?.vehicle.top_speed} Km/h</small>\n                        </div>\n\n                        <div>\n                            <img src={Vector} alt=\"Vector\"/>\n                            <small>{listing?.vehicle.acceleration}s</small>\n                        </div>\n\n                        <div>\n                            <img src={Forcy} alt=\"Forcy\"/>\n                            <small>{listing?.vehicle.horsepower} HP</small>\n                        </div>\n                        \n                        <div>\n                            <img src={Gasoliny} alt=\"Fuel\"/>\n                            <small>{listing?.vehicle.fuel}</small>\n                        </div>\n\n                        <div>\n                            <img src={Cambio} alt=\"Cambio\"/>\n                            <small>{listing?.vehicle.transmission}</small>\n                        </div>\n\n                        <div>\n                            <img src={People} alt=\"People\"/>\n                            <small>5 pessoas</small>\n                        </div>\n                    </Settings>\n\n                    <Time>\n                        <div className=\"de\">\n                            <small>DE</small>\n                            <span>{format(new Date(listing?.startDate), 'dd/MM/yyyy')}</span>\n                        </div>\n                        <div className=\"arrow\">\n                            <br/>\n                            <FiArrowRight size={24}/>\n                        </div>\n                        <div className=\"for\">\n                            <small>ATÉ</small>\n                            <span>{format(new Date(listing?.endDate), 'dd/MM/yyyy')}</span>\n                        </div>\n                    </Time>\n\n                    <Total>\n                        <small>TOTAL</small>\n                        <div>\n                            <span>R$ {`${listing?.price} x \n                                ${\n                                    (Math.abs(Number(new Date(listing.endDate)) -\n                                        Number(new Date(listing.startDate))) /\n                                            (1000 * 3600 * 24)).toFixed(0)\n                                }`} diárias\n                            </span>\n                            <span>R$ {\n                                listing.price *\n                                    (Number((Math.abs(Number(new Date(listing.endDate)) -\n                                        Number(new Date(listing.startDate))) / \n                                            (1000 * 3600 * 24)).toFixed(0)))\n                            }, 00</span>\n                            <Button onClick={() => handleToCreateSchedule(data.user._id, listing._id)}>\n                                Alugar Agora\n                            </Button>\n                        </div>\n                    </Total>\n                </Content>\n            : <p>Nenhum carro selecionado.</p>\n            }\n        </Container>\n    );\n}\n\nexport default Details;","/home/samuel/Documentos/UFOP/5º PERÍODO/BANCO DE DADOS II/Trabalho Prático/BD II/frontend/src/components/Datepicker/index.tsx",[],{"ruleId":"20","severity":1,"message":"21","line":57,"column":18,"nodeType":"22","messageId":"23","endLine":57,"endColumn":25},"@typescript-eslint/no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar"]